name: Build and Test

on:
  push:
    branches:
      - staging
      - trying
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["", "--no-default-features"]
        target: ["x86_64-unknown-linux-gnu", "i686-unknown-linux-gnu"]
    steps:
      - uses: actions/checkout@v2
      - if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
        name: Install 32-bit system toolchain
        run: sudo apt-get install gcc-multilib -y
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release ${{ matrix.features }} --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }} --target ${{ matrix.target }}

  rustfmt:
    name: Check Source Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Lint with Clippy
    env:
      RUSTFLAGS: "-D warnings"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  audit:
    name: Cargo Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  bors-gate:
    runs-on: ubuntu-latest
    needs: [build-and-test, rustfmt, clippy, audit]
    steps:
      - run: "true"
